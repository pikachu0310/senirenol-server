// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/pikachu0310/go-backend-template",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/charts": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charts"
                ],
                "summary": "譜面登録/更新",
                "parameters": [
                    {
                        "description": "譜面情報",
                        "name": "chart",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpsertChartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/charts/ranking": {
            "get": {
                "description": "beatmap_idを指定したランキング、未指定時は全譜面のランキング",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charts"
                ],
                "summary": "譜面ランキング",
                "parameters": [
                    {
                        "type": "string",
                        "description": "譜面ID",
                        "name": "beatmap_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ランキング上限",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "サーバーの死活確認用エンドポイント",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "ping"
                ],
                "summary": "Ping API",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/scores": {
            "post": {
                "description": "プレイ結果を登録します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scores"
                ],
                "summary": "スコア登録",
                "parameters": [
                    {
                        "description": "プレイ結果",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SubmitScoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/songs/playcount": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charts"
                ],
                "summary": "楽曲プレイ回数ランキング",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "初回起動時に匿名ユーザーを生成し、user_idを返します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "ユーザー登録",
                "responses": {
                    "200": {
                        "description": "{\\\"id\\\":\\\"UUID\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/update": {
            "post": {
                "description": "user_idに対してuser_nameを更新します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "ユーザー名更新",
                "parameters": [
                    {
                        "description": "更新内容",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.updateUserNameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\\\"status\\\":\\\"ok\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{userID}": {
            "get": {
                "description": "指定したIDのユーザー情報を取得します（名前のみ）",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "ユーザー情報取得",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{id,name}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{userID}/stats": {
            "get": {
                "description": "プレイ回数など統計情報を返します",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "ユーザー統計",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.SubmitScoreRequest": {
            "type": "object",
            "properties": {
                "beatmap_id": {
                    "type": "string"
                },
                "good_fast": {
                    "type": "integer"
                },
                "good_late": {
                    "type": "integer"
                },
                "input": {
                    "type": "integer"
                },
                "max_combo": {
                    "type": "integer"
                },
                "miss": {
                    "type": "integer"
                },
                "perfect_critical_fast": {
                    "type": "integer"
                },
                "perfect_critical_late": {
                    "type": "integer"
                },
                "perfect_fast": {
                    "type": "integer"
                },
                "perfect_late": {
                    "type": "integer"
                },
                "score": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "handler.UpsertChartRequest": {
            "type": "object",
            "properties": {
                "beatmap_id": {
                    "type": "string"
                },
                "difficulty": {
                    "type": "integer"
                },
                "parallel_string": {
                    "type": "string"
                },
                "song_name": {
                    "type": "string"
                }
            }
        },
        "handler.updateUserNameRequest": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "Go Backend Template API",
	Description:      "バックエンドテンプレートのAPI仕様書です。",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
