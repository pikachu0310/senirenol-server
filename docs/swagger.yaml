basePath: /api/v1
definitions:
  handler.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
  handler.CreateUserResponse:
    properties:
      id:
        type: string
    type: object
  handler.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  handler.GetUserResponse:
    properties:
      email:
        type: string
      iconUrl:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: https://github.com/pikachu0310/go-backend-template
  description: バックエンドテンプレートのAPI仕様書です。
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Go Backend Template API
  version: "1.0"
paths:
  /ping:
    get:
      consumes:
      - application/json
      description: サーバーの死活確認用エンドポイント
      produces:
      - text/plain
      responses:
        "200":
          description: pong
          schema:
            type: string
      summary: Ping API
      tags:
      - ping
  /users:
    get:
      consumes:
      - application/json
      description: 全ユーザーの情報を取得します
      produces:
      - application/json
      responses:
        "200":
          description: ユーザー一覧
          schema:
            items:
              $ref: '#/definitions/handler.GetUserResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: ユーザー一覧取得
      tags:
      - users
    post:
      consumes:
      - application/json
      description: 新しいユーザーを作成します
      parameters:
      - description: ユーザー情報
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 作成されたユーザーのID
          schema:
            $ref: '#/definitions/handler.CreateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: ユーザー作成
      tags:
      - users
  /users/{userID}:
    get:
      consumes:
      - application/json
      description: 指定したIDのユーザー情報を取得します
      parameters:
      - description: User ID
        format: uuid
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ユーザー情報
          schema:
            $ref: '#/definitions/handler.GetUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: ユーザー情報取得
      tags:
      - users
schemes:
- http
- https
swagger: "2.0"
